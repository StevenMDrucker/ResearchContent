%!PS-Adobe-3.0
%%Title: (resume.3.20.95.frame)
%%Creator: (FrameMaker 4 Power Macintosh: LaserWriter 8.0 8.0)
%%CreationDate: (4:08 PM Tuesday, April 25, 1995)
%%For: ()
%%Pages: 2
%%DocumentFonts: Helvetica-Bold Times-Roman Times-Italic Times-Bold
%%DocumentNeededFonts: Helvetica-Bold Times-Roman Times-Italic Times-Bold
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -14 -14 778 598
%ADO_ImageableArea: 0 0 766 584
%%EndComments
/md 138 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 80 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_customps
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/$t Z
/$p Z
/$s Z
/$o 1. def
/2state? false def
/ps Z
level2 startnoload
/pushcolor/currentrgbcolor ld
/popcolor/setrgbcolor ld
/setcmykcolor where
{
pop/currentcmykcolor where
{
pop/pushcolor/currentcmykcolor ld
/popcolor/setcmykcolor ld
}if
}if
level2 endnoload level2 not startnoload
/pushcolor
{
currentcolorspace $c eq
{
currentcolor currentcolorspace true
}{
currentcmykcolor false
}ifelse
}bd
/popcolor
{
{
setcolorspace setcolor
}{
setcmykcolor
}ifelse
}bd
level2 not endnoload
/pushstatic
{
ps
2state?
$o
$t
$p
$s
}bd
/popstatic
{
/$s xs
/$p xs
/$t xs
/$o xs
/2state? xs
/ps xs
}bd
/pushgstate
{
save errordict/nocurrentpoint{pop 0 0}put
currentpoint
3 -1 roll restore
pushcolor
currentlinewidth
currentlinecap
currentlinejoin
currentdash exch aload length
np clippath pathbbox
$m currentmatrix aload pop
}bd
/popgstate
{
$m astore setmatrix
2 index sub exch
3 index sub exch
rC
array astore exch setdash
setlinejoin
setlinecap
lw
popcolor
np :M
}bd
/bu
{
pushgstate
gR
pushgstate
2state?
{
gR
pushgstate
}if
pushstatic
pm restore
mT concat
}bd
/bn
{
/pm save store
popstatic
popgstate
gS
popgstate
2state?
{
gS
popgstate
}if
}bd
/cpat{pop 64 div G 8{pop}repeat}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
1 dict dup /ManualFeed false put setpagedevice
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *PageSize Letter

    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
%%EndFeature
}featurecleanup
()setjob
/pT[1 0 0 -1 14 778]def/mT[1 0 0 -1 14 778]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Helvetica-Bold
%%IncludeFont: Times-Roman
%%IncludeFont: Times-Italic
%%IncludeFont: Times-Bold
/f0_1/Helvetica-Bold :mre
/f0_24 f0_1 24 scf
/f0_13 f0_1 13 scf
/f0_9 f0_1 9 scf
/f0_8 f0_1 8 scf
/f1_1/Times-Roman :mre
/f1_10 f1_1 10 scf
/f1_9 f1_1 9 scf
/f1_8 f1_1 8 scf
/f2_1/Times-Italic :mre
/f2_9 f2_1 9 scf
/f3_1/Times-Bold :mre
/f3_9 f3_1 9 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
% Frame PostScript Prolog for use with Macintosh Frame Products 4.0.2% Copyright (c) 1986-94 Frame Technology Corp.  All rights reserved.%%BeginProcSet: "FrameMacDict" 402 17userdict/FrameMacDict 200 dict put FrameMacDict begin systemdict/setpackingknown{/fMSP currentpacking def true setpacking}if[/fM1/fM18/fM2/fM3/fM4/fM5/fM6/fM8/fM9/fMBC/fMBM/fMC/fMCD/fMCG/fMCK/fMCM/fMCl/fMCO/fMFl/fMGC/fMGL/fMGM/fMIx/fMJB/fMJC/fMJG/fMJK/fMJM/fMJR/fMJY/fMK/fML1/fMM/fMN/fMNC/fMNg/fMND/fMOx/fMPC/fMPH/fMPt/fMRC/fMS/fMSJ/fMUC/fMUM/fMUY/fMY/fMat/fMa2/fMi/fMk/fms/fmBS/fMdp/freq/sangle/sflipx/sflipy/pflipx/pflipy/xx/yy/xindex/yindex/fM1B/fM0B]{0 def}forall/fML1/languagelevel where{pop languagelevel}{1}ifelse 2 lt def/fMCl fML1{/statusdict where{pop statusdict/processcolors known{statusdict/processcolorsget exec 1 gt}{F}ifelse}{F}ifelse}{T}ifelse def/FmBD{bind def}bind def/fmBx{[exch{dup/FrameMacDict eq{pop FrameMacDict}{dup type dup/arraytype eq exch/packedarraytype eq or{dup xcheck{fmBi}if}if}ifelse}forall]cvx}FmBD/fmBi{bindfmBx}FmBD/fmPU{userdict 3 1 roll fmBi put}bind def/T true def/F false defuserdict/fMSuccessfull F put userdict/fMSi F put userdict/fM7 known not{userdict/fM7 0 put}if/fmXD{exch def}FmBD/FmG/gsave load def/FmR/grestore loaddef/fm_l/grestoreall load def/fm_v/save load def/fm_g/setgray load def/fm_r/setrgbcolor load def/fm_h/sethsbcolor load def/fm_f/fill load def/fm_e/eofillload def/fm_t/stroke load def/fm_m/imagemask load def/fm_i/image load def/fm_s/show load def/fm_a/ashow load def/fm_w/widthshow load def/fm_y/awidthshow loaddef/fm_k/kshow load def/fMat matrix def/fMa2 matrix def/fmSM{fMat currentmatrixpop}FmBD/fmRM{fMat setmatrix}FmBD/FmRF{currentpoint 2 copy translate 4 2 roll{-1 1 scale}if rotate neg exch neg exch translate}FmBD/fmax{2 copy lt{exch}ifpop}FmBD/fmin{2 copy gt{exch}if pop}FmBD systemdict/pdfmark known{/FmPD/pdfmarkload def/FmPT/fm_s load def}{/FmPD/cleartomark load def/FmPT/pop load def}ifelse/FmDC{transform fMat defaultmatrix itransform cvi exch cvi exch}FmBD/fmgS32 array def/fMgt 0 def/fMtp 0 def/fmSG{fmgS fMgt get dup null eq{pop fmgS fMgt10 dict dup 4 1 roll put}if 3 1 roll put}FmBD/fmGG{fMgt -1 -1{fmgS exch get dupnull ne{2 copy exch known{2 copy exch get/_notdef ne{exch get dup exit}if}if}ifpop}for pop}FmBD/gsave{FrameMacDict begin FmG/fMgt fMgt 1 add def fmgS fMgt getdup null eq{pop}{dup dup{pop/_notdef put dup}forall pop pop}ifelse end}fmPU/grestore{FrameMacDict begin fMgt fMtp gt{/fMgt fMgt 1 sub def}if FmR null fmCNend}fmPU/grestoreall{FrameMacDict begin/fMgt fMtp def fm_l null fmCN end}fmPU/save{FrameMacDict/fm_v get exec FrameMacDict begin/fMgt fMgt 1 add def fmgSfMgt get dup null eq{pop}{dup dup{pop/_notdef put dup}forall pop pop}ifelse/fMtp fMgt def end}fmPU/fMND F def/fMCC null fmSG/fMOP F fmSG/fMKO F fmSG/fmRY{1 exch sub 3 1 roll 1 exch sub 3 1 roll 1 exch sub 3 1 roll 3 copy 2 copy le{pop}{exch pop}ifelse 2 copy le{pop}{exch pop}ifelse dup dup dup 6 1 roll 4 1roll 7 1 roll sub 6 1 roll sub 5 1 roll sub 4 1 roll}fmSG/fmkn{2 copy known{getT}{pop pop false}ifelse}FmBD/fmfp{exch currentfont dup/FontMatrix get exch/FontInfo fmkn{T}{currentfont/df fmkn{dup/FontInfo fmkn{3 1 roll/FontMatrix getmtx concatmatrix exch T}{pop pop pop F}ifelse}{pop pop F}ifelse}ifelse{3 -1roll fmkn{exch 0 3 1 roll dtransform neg exch pop exch pop}{pop exec}ifelse}{exec}ifelse}FmBD/fmdl{3 index 16 and 0 ne{FmG currentlinewidth 2. div duprmoveto currentpoint newpath moveto 2 index 0 rlineto fm_t FmR}if 3 index 24and 0 ne{FmG currentrgbcolor dup 4 1 roll eq 3 1 roll eq and{1 currentgray subsetgray}{1 setgray}ifelse 2 index 0 rlineto fm_t FmR FmG 2 index 0 rlinetostrokepath .24 setlinewidth fm_t FmR}{2 index 0 rlineto fm_t 0 0 moveto}ifelse}FmBD/FmUl{FmG/fM2 fmXD currentpoint/UnderlineThickness{fM2 15 div}fmfp abs dupsetlinewidth/fM1 fmXD 4 index 1 and 0 ne{newpath 2 copy moveto 0/UnderlinePosition{fM2 10 div neg}fmfp neg rmoveto fmdl}if 4 index 2 and 0 ne{newpath 2 copy moveto 0/XHeight{FmG newpath 0 0 moveto(x)F charpath flattenpathpathbbox 4 -1 roll pop pop pop FmR dup 0 eq{pop fM2 2. mul 3. div neg}if}fmfp2. div rmoveto fmdl}if 4 index 4 and 0 ne{newpath 2 copy moveto 0/CapHeight{FmGnewpath 0 0 moveto(H)F charpath flattenpath pathbbox 4 -1 roll pop pop pop FmRdup 0 eq{pop fM2 3. mul 4. div neg}if}fmfp fM1 sub rmoveto fmdl}if pop pop poppop pop FmR}FmBD/FmTx{/fM3 fmXD/fM2 fmXD/fM1 fmXD 0 32 fM1 fM3 stringwidth popfM2 sub fM3 length div sub 0 fM3 fm_y}FmBD/fMN 0 def/fMC 1 def/fMM 2 def/fMY 3def/fMK 4 def/fMS 5 def/fMNg 0 currenttransfer exec .5 gt def/fMCM fMN def/fMJK0 def/fMJY 0 def/fMJM 0 def/fMJC 0 def/fMJR 1 def/fMJG 1 def/fMJB 1 def/fMCG 1def/fMPt null def/fMCK[0 0 0 1 0 0 0]def/fmCH{fML1{14 dict dup begin fMCl{/HalftoneType 2 def currentcolorscreen[/GraySpotFunction/GrayAngle/GrayFrequency/BlueSpotFunction/BlueAngle/BlueFrequency/GreenSpotFunction/GreenAngle/GreenFrequency/RedSpotFunction/RedAngle/RedFrequency]{exch def}forall}{/HalftoneType 1 def currentscreen[/SpotFunction/Angle/Frequency]{exchdef}forall}ifelse statusdict/checkscreen known{statusdict/accuratescreens getexec}{F}ifelse/AccurateScreens exch def end}{currenthalftone}ifelse}FmBD/fmSH{fML1{begin statusdict/checkscreen known{currentdict/AccurateScreens known{AccurateScreens}{F}ifelse statusdict/setaccuratescreens get exec}ifHalftoneType 1 eq{Frequency Angle currentdict/SpotFunction get setscreen}{HalftoneType 2 eq{fMCl{RedFrequency RedAngle currentdict/RedSpotFunction getGreenFrequency GreenAngle currentdict/GreenSpotFunction get BlueFrequencyBlueAngle currentdict/BlueSpotFunction get GrayFrequency GrayAngle currentdict/GraySpotFunction get setcolorscreen}{GrayFrequency GrayAngle currentdict/GraySpotFunction get setscreen}ifelse}if}ifelse end}{sethalftone}ifelse}FmBD/FmCS{14 dict begin/HalftoneType 2 def/AccurateScreens exch def/GraySpotFunction exch def/GrayAngle exch def/GrayFrequency exch def/BlueSpotFunction exch def/BlueAngle exch def/BlueFrequency exch def/GreenSpotFunction exch def/GreenAngle exch def/GreenFrequency exch def/RedSpotFunction exch def/RedAngle exch def/RedFrequency exch def currentdictdup end/fMPH exch def fmSH}FmBD/FmSS{5 dict begin/HalftoneType 1 def/AccurateScreens exch def/SpotFunction exch def/Angle exch def/Frequency exchdef currentdict dup end/fMPH exch def fmSH}FmBD/fMPH fmCH def/fmcp{/FmPr2 exchcvlit def/FmPr1 exch cvlit def/FmPrn FmPr1 length FmPr2 length add array defFmPrn 0 FmPr1 putinterval FmPrn FmPr1 length FmPr2 putinterval FmPrn cvx}FmBD/fmEp{sub dup 0 lt{neg}if .001 le}FmBD/fmQC{2 copy 0 get exch 0 get fmEp{2 copy1 get exch 1 get fmEp{2 copy 2 get exch 2 get fmEp{3 get exch 3 get fmEp}{poppop F}ifelse}{pop pop F}ifelse}{pop pop F}ifelse}FmBD/fmQR{2 copy 4 get exch 0get fmEp{2 copy 5 get exch 1 get fmEp{6 get exch 2 get fmEp}{pop pop F}ifelse}{pop pop F}ifelse}FmBD/FmSC{/fMCM fmXD/fMJB fmXD/fMJG fmXD/fMJR fmXD/fMJK fmXD/fMJY fmXD/fMJM fmXD/fMJC fmXD fmCC}FmBD/FmSP{/fMCM fmXD fmCC}FmBD/FrameSetSepColors{FrameMacDict begin[exch 1 add 1 roll]/fMSC exch def end}fmBidef/fmLC{fMSC{exch dup 3 -1 roll fmQC{pop T exit}if}forall dup T ne{pop F}if}FmBD/fmLR{fMSC{exch dup 3 -1 roll fmQR{pop T exit}if}forall dup T ne{pop F}if}FmBD/fmLM{fMSC{exch dup 3 -1 roll dup 7 get 3 -1 roll eq{exch pop T exit}{pop}ifelse}forall dup T ne{pop F}if}FmBD/fmCN{fMND F fMCM fMN ne{/fMOP fmGG{/fMKOfmGG{pop T}if}if}if dup/fMND exch def{pop pop}{exch dup null ne{exch pop duptype dup/integertype eq exch/realtype eq or{fm_g}{setcolor}ifelse}{pop{1 fm_g}if}ifelse}ifelse}FmBD/fill{FrameMacDict begin fMND{newpath}{fm_f}ifelse end}fmPU/eofill{FrameMacDict begin fMND{newpath}{fm_e}ifelse end}fmPU/stroke{FrameMacDict begin fMND{newpath}{fm_t}ifelse end}fmPU/imagemask{FrameMacDictbegin fMND{FmG nulldevive fm_m FmR}{fm_m}ifelse end}fmPU/show{FrameMacDictbegin fMND{stringwidth rmoveto}{fm_s}ifelse end}fmPU/fmNX{load fMND{FmG fMa2currentmatrix end nulldevice setmatrix exec currentpoint FrameMacDict/FmR getexec moveto}{end exec}ifelse}fmBi def/ashow{FrameMacDict begin/fm_a fmNX}fmPU/widthshow{FrameMacDict begin/fm_w fmNX}fmPU/awidthshow{FrameMacDict begin/fm_yfmNX}fmPU/kshow{FrameMacDict begin/RealKshow fmNX}fmPU/image{FrameMacDict beginfMCM fMN ne fMCM fMK ne and{FmG/fMOP fmGG{nulldevice}{fMNg{{pop 0}}{{pop 1}}ifelse settransfer}ifelse/fm_i load end exec FmR}{/fm_i load end exec}ifelse}fmPU/fMGM T def/fMBM F def/setcustomcolor where{pop}{/findcmykcustomcolor{0 0 04 -1 roll 8 array astore}fmPU/findrgbcustomcolor{FrameMacDict begin 4 1 roll 3copy/fmRY fmGG exec 8 4 roll 4 -1 roll 8 array astore end}fmPU/findgraycustomcolor{0 0 0 exch 1 exch sub exch findcmykcustomcolor}fmPU/findhsbcustomcolor{FrameMacDict begin 4 1 roll gsave fm_h currentrgbcolorgrestore 4 -1 roll findrgbcustomcolor end}fmPU/setcustomcolor{FrameMacDictbegin dup type dup/integertype eq exch/realtype eq or not{1.0}if exch dup/fMCCexch fmSG/fMBM F def fMCM fMN eq{0 4 getinterval aload pop 4{4 index mul 4 1roll}repeat fmSK pop}{dup{7 get}stopped{pop 4 get}if fmLM{exch pop 0 4getinterval aload pop fMCM fMS eq{fMJK eq exch fMJY eq and exch fMJM eq andexch fMJC eq and{1 exch sub F}{pop 1 T}ifelse}{5{pop}repeat 1 T}ifelse}{fMCMfMK eq{3 get F}{fMCM fMY eq{2 get F}{fMCM fMM eq{1 get F}{fMCM fMC eq{0 get F}{pop 0 T}ifelse}ifelse}ifelse}ifelse 3 1 roll mul 1 exch sub exch}ifelse/fMKOexch fmSG fmCN}ifelse end}fmPU/setoverprint{FrameMacDict begin/fMOP exch fmSGnull fmCN end}fmPU/currentoverprint{FrameMacDict begin/fMOP fmGG end}fmPU}ifelse/fmCC{fMCM fMN eq{fMGM fML1 or not{[/Pattern[/DeviceCMYK]]setcolorspacefMCK 0 4 getinterval aload pop fMPt setcolor}{fMCK 3 get 1.0 ge{fMCG fm_g}{fMClfMGM and{0 1 3{fMCK exch get 1 fMCG sub mul}for fmSK}{4 1 6{fMCK exch get fMGM{1 exch sub 1 fMCG sub mul 1 exch sub}{1.0 lt{fMCG}{1}ifelse}ifelse}for fm_r}ifelse}ifelse}ifelse null/fMKO F fmSG}{fMBM{fMCG F}{fMCK 0 4 getinterval aloadfmLC{fMCM fMS eq{fMJK eq exch fMJY eq and exch fMJM eq and exch fMJC eq and{fMCG F}{1 T}ifelse}{pop pop pop pop 1 T}ifelse}{fMCM fMK eq{fMCG 1.0 exch submul 1.0 exch sub 4 1 roll pop pop pop F}{fMCM fMY eq{pop fMCG 1.0 exch sub mul1.0 exch sub 3 1 roll pop pop F}{fMCM fMM eq{pop pop fMCG 1.0 exch sub mul 1.0exch sub exch pop F}{fMCM fMC eq{pop pop pop fMCG 1.0 exch sub mul 1.0 exch subF}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse/fMKO exch fmSGfMGM fML1 or not{[/Pattern[/DeviceGray]]setcolorspace fMPt}{fMGM not fML1 and{dup 1 lt{pop fMCG}if}if}ifelse}ifelse fmCN}FmBD/setgray{FrameMacDict begin fMCMfMN eq{F}{fMCM fMK eq{F}{fMCM fMS eq fMJR 0 eq and fMJG 0 eq and fMJB 0 eq and{F}{pop 1 T}ifelse}ifelse}ifelse/fMKO exch fmSG fmCN end}fmPU/setrgbcolor{FrameMacDict begin/fMBM F def fMCM fMN eq{fm_r}{3 copy[4 1 roll]fmLR{fMCM fMSeq{fMJB eq exch fMJG eq and exch fMJR eq and{0 F}{1 T}ifelse}{pop pop pop 1 T}ifelse}{/fmRY fmGG exec fMCM fMK eq{1.0 exch sub 4 1 roll pop pop pop F}{fMCMfMY eq{pop 1.0 exch sub 3 1 roll pop pop F}{fMCM fMM eq{pop pop 1.0 exch subexch pop F}{fMCM fMC eq{pop pop pop 1.0 exch sub F}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}ifelse}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPU/sethsbcolor{FrameMacDict begin fMCM fMN eq{fm_h}{fm_h currentrgbcolor setrgbcolor}ifelseend}fmPU/setcmykcolor where{pop/fmSK/setcmykcolor load def}{/fmSK{4 1 roll 3{3index add 0 fmax 1 fmin 1 exch sub 3 1 roll}repeat fm_r pop}FmBD}ifelse/currentcmykcolor where{pop}{/currentcmykcolor{FrameMacDict begincurrentrgbcolor/fmRY fmGG exec end}fmPU}ifelse/setcmykcolor{FrameMacDict begin/fMBM F def fMCM fMN eq{fmSK}{4 copy[5 1 roll]fmLC{fMCM fMS eq{fMJK eq exchfMJY eq and exch fMJM eq and exch fMJC eq and{0 F}{1 T}ifelse}{pop pop pop pop1 T}ifelse}{fMCM fMK eq{1.0 exch sub 4 1 roll pop pop pop F}{fMCM fMY eq{pop1.0 exch sub 3 1 roll pop pop F}{fMCM fMM eq{pop pop 1.0 exch sub exch pop F}{fMCM fMC eq{pop pop pop 1.0 exch sub F}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}ifelse}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPU/fMFl[0 .1 .3 .5 .7 .9.97 1<0f1e3c78f0e1c387><0f87c3e1f0783c1e><cccccccccccccccc><ffff0000ffff0000><8142241818244281><0102040810204080><8040201008040201>]def fML1{/patScreenDict 7dict dup begin<0f1e3c78f0e1c387>[45{pop}{exch pop}.5 2 sqrt]FmBD<0f87c3e1f0783c1e>[135{pop}{exch pop}.5 2 sqrt]FmBD<cccccccccccccccc>[0{pop}dup .5 2]FmBD<ffff0000ffff0000>[90{pop}dup .5 2]FmBD<8142241818244281>[45{2 copy lt{exch}if pop}dup .75 2 sqrt]FmBD<0102040810204080>[45{pop}{exch pop}.875 2 sqrt]FmBD<8040201008040201>[135{pop}{exch pop}.875 2 sqrt]FmBD end def}{/fMPP 5 dict dup begin<0f87c3e1f0783c1e>{3 setlinewidth -1 -1 moveto 9 9 lineto fm_t 4 -4 moveto 12 4lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<0f1e3c78f0e1c387>{3 setlinewidth-1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4 lineto fm_t 4 12 moveto 12 4lineto fm_t}FmBD<8142241818244281>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t-1 -1 moveto 9 9 lineto fm_t}FmBD<8040201008040201>{1 setlinewidth -1 -1 moveto9 9 lineto fm_t 4 -4 moveto 12 4 lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<0102040810204080>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4lineto fm_t 4 12 moveto 12 4 lineto fm_t}FmBD end def/fMPD 15 dict dup begin/PatternType 1 def/PaintType 2 def/TilingType 3 def/BBox[0 0 8 8]def/XStep 8def/YStep 8 def/PaintProc{begin fMPP fmBS known{fMPP fmBS get exec}{8 8 T[1 0 0-1 0 8]fmBS fm_m}ifelse end}FmBD end def}ifelse/fMdp 72 0 fMat defaultmatrixdtransform dup mul exch dup mul add sqrt def/freq fMdp dup 72 div round dup 0eq{pop 1}if 8 mul div def/sangle 1 0 fMat defaultmatrix dtransform exch atandef sangle fMa2 rotate fMat fMa2 concatmatrix dup 0 get/sflipx exch def 3 get/sflipy exch def fML1{/fmgF{fMa2 exch get mul 0 lt{-1}{1}ifelse}FmBD}if/fmPMfML1{{dup patScreenDict exch known{patScreenDict exch get aload pop freq mul 52 roll fMa2 currentmatrix 1 get 0 ne{3 -1 roll 90 add 3 1 roll sflipx 1 fmgFsflipy 2 fmgF mul}{sflipx 0 fmgF sflipy 3 fmgF neg mul}ifelse 0 lt{exch pop}{pop}ifelse fMNg{{neg}fmcp}if bind systemdict/setscreen get exec}{/fmBS fmXD/fM1B 0 def/fM0B 0 def freq 0 fMa2 currentmatrix 1 get 0 ne{90 add/pflipxsflipx 1 fmgF def/pflipy sflipy 2 fmgF def}{/pflipx sflipx 0 fmgF def/pflipysflipy 3 fmgF neg def}ifelse{pflipy mul/yy fmXD pflipx mul/xx fmXD/xindex xx 1add 2 div 8 mul cvi def/yindex yy 1 add 2 div 8 mul cvi def fmBS yindex xindex8 idiv add get 1 7 xindex 8 mod sub bitshift and 0 ne fMNg{not}if{/fM1B fM1B 1add def 1}{/fM0B fM0B 1 add def 0}ifelse}setscreen fM0B fM0B fM1B add div fMNg{1.0 exch sub}if}ifelse/fMCG exch def/fMGM F def fmCC}}{/fMPC 8 dict def{dupfMPC exch known{fMPC exch get}{dup fMPD/fmBS 3 -1 roll put fMPD matrixmakepattern dup fMPC 4 -1 roll 3 -1 roll put}ifelse/fMCG 0 def/fMPt exch def/fMGM F def fmCC}}ifelse FmBD/fmgr{fMGM not{/fMGM T def fML1{fMPH fmSH}if}if/fMCG exch def fmCC}FmBD/FmP{fMFl exch get dup type/stringtype eq{fmPM}{fmgr}ifelse}FmBD/FmK{fMCK astore pop/fMBM F def fmCC}FmBD/FmFB{0 0 0 1 0 0 0 fMCKastore pop/fMCG 0 def/fMBM T def fmCC}FmBD/fMOx matrix def fMOx currentmatrixpop/FmSO{/FmOs save def fmSM fMOx setmatrix}FmBD/FmIO{fmRM}FmBD/FmEO{FmOsrestore}FmBD/fm3R[{.3 mul add 1}bind{.59 mul add 2}bind{.11 mul add round cvifMs exch fMi exch put/fMi fMi 1 add def 0 0}bind]def/fm31{/fMi 0 def 0 exch 0exch{exch fm3R exch get exec}forall pop pop fMs}FmBD fML1{/Fmi{save userdict/fM7 3 -1 roll put/fM9 F def{{dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD/fMRC fmXD/fMGC fMGL 1 add array def/setcolortransfer where{popcurrentcolortransfer/gryt fmXD/blut fmXD/grnt fmXD/redt fmXD 0 1 fMGL{/fMIxfmXD/fMUC 1 fMRC fMIx get sub def/fMUM 1 fMNC fMIx get sub def/fMUY 1 fMBC fMIxget sub def/fMk fMUC fMUM fmin fMUY fmin def/FmU fMk currentundercolorremovalexec def fMRC fMIx 1 0 fMUC FmU sub fmax sub redt exec put fMNC fMIx 1 0 fMUMFmU sub fmax sub grnt exec put fMBC fMIx 1 0 fMUY FmU sub fmax sub blut execput fMGC fMIx 1 fMk currentblackgeneration exec sub gryt exec put}for{fMGL mulcvi fMRC exch get}{fMGL mul cvi fMNC exch get}{fMGL mul cvi fMBC exch get}{fMGLmul cvi fMGC exch get}setcolortransfer{pop 0}setundercolorremoval{}setblackgeneration/fM9 T def}{0 1 fMGL{fMGC exch dup dup fMRC exch get .3 mulexch dup fMNC exch get .59 mul exch fMBC exch get .11 mul add add put}for{fMGLmul cvi fMGC exch get}currenttransfer fmcp settransfer}ifelse}{dup length 1 sub/fMGL fmXD/fMGC fmXD{fMGL mul cvi fMGC exch get}currenttransfer fmcpsettransfer}ifelse}{{{1 exch sub}currenttransfer fmcp settransfer}if}ifelse/fM5fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale}if/fM18 fM8 string def fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]{currentfilefM18 fM5{readstring}{readhexstring}ifelse pop}fM9{{fM18}{fM18}T 3 colorimage}{fm_i}ifelse fM7 restore}FmBD}{/Fmi{save userdict/fM7 3 -1 roll put/fM9 F def{{dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD/fMRC fmXD[/Indexed/DeviceRGBfMGL{dup fMRC exch get exch dup fMNC exch get exch fMBC exch get}]setcolorspace}{dup length 1 sub/fMGL fmXD/fMGC fmXD[/Indexed/DeviceGray fMGL{fMGC exch get}]setcolorspace}ifelse}{1 4 index bitshift 1 sub/fMGL fmXD[/Indexed/DeviceGrayfMGL 5 -1 roll{{fMGL div 1 exch sub}}{{fMGL div}}ifelse]setcolorspace}ifelse/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale}if/fM18 fM8 string def 7 dict begin/ImageType 1 def/Width fM4 def/Height fM3def/ImageMatrix[fM4 0 0 fM3 fM4 2 div fM3 2 div]def/DataSource{currentfile fM18fM5{readstring}{readhexstring}ifelse pop}def/BitsPerComponent fM6 def/Decode[0fMGL]def currentdict end fm_i fM7 restore}FmBD}ifelse/Fmci{save userdict/fM7 3-1 roll put/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD/fM18 fM8 string def/fMs fM18 0 fM18 length 3 idiv getinterval def translate rotate scale{-1 1scale}if fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]fMCl{{currentfile fM18 fM5{readstring}{readhexstring}ifelse pop}F 3 colorimage}{{currentfile fM18 fM5{readstring}{readhexstring}ifelse pop fm31}fm_i}ifelse fM7 restore}FmBD fML1{/fmAn{transform round .5 sub exch round .5 sub exch itransform}FmBD/fmAc{transform round 1.5 sub exch round 1.5 sub exch itransform}FmBD/fmDn{dtransformround exch round exch idtransform}FmBD/fmLn{0 dtransform exch cvi 2 idiv 2 mul.1 add exch idtransform pop}FmBD/FmCv{fmDn 6 2 roll fmDn 6 2 roll fmDn 6 2 rollrcurveto}FmBD}{T setstrokeadjust/fmAn{}FmBD/fmAc{}FmBD/fmDn{}FmBD/fmLn{}FmBD/FmCv{rcurveto}FmBD}ifelse/FmM{fmAn moveto}FmBD/M{moveto}FmBD/N{0 rmoveto}FmBD/S{fm_s}FmBD/A{0 exch fm_a}FmBD/W{0 exch 32 exch fm_w}FmBD/X{0 exch 0 32 5 2roll fm_y}FmBD/fmQP{fML1 fMGM or not{FmG dup 1 fm_g exec FmR}if exec}FmBD/FmB{newpath fmAn moveto}FmBD/FmL{rlineto}FmBD/FmAL{fmAn lineto}FmBD/FmSo{fmLnsetlinewidth setlinecap{fm_t}fmQP 0 0 moveto}FmBD/FmS{fmLn setlinewidthclosepath{fm_t}fmQP 0 0 moveto}FmBD/FmDS{fmLn setlinewidth setlinecap{closepath}if setdash{fm_t}fmQP[]0 setdash 0 0 moveto}FmBD/FmFl{FmG{fm_e}fmQP FmR}FmBD/fmq{fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0 exch rlineto neg 0rlineto closepath}FmBD/FmqP{fmq fmLn setlinewidth{fm_t}fmQP 0 0 moveto}FmBD/FmqF{fmq FmG{fm_f}fmQP FmR}FmBD/FmKp{{currentpoint}stopped{F 5 1 roll}{T 7 3roll}ifelse fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0 exch rlinetoneg 0 rlineto closepath clip{moveto}{newpath}ifelse}FmBD/FmKb{{currentpoint}stopped}FmBD/FmKe{clip{newpath}{moveto}ifelse}FmBD/FmAF{FmG newpath fmAntranslate not{0.0 0.0 moveto}if rotate fmDn scale 0.0 0.0 1.0 5 3 roll arcclosepath{fm_f}fmQP FmR}FmBD/FmAP{FmG{setdash}if fmLn setlinewidth setlinecapfmSM newpath 2 index 2 div add exch 3 index 2 div sub exch fmAn 2 index 2 divsub exch 3 index 2 div add exch translate rotate scale 0.0 0.0 1.0 5 3 rollexch arcn{closepath}if fmRM{fm_t}fmQP FmR}FmBD/FmST{FmG fmAn translate .3 fmLnsetlinewidth 0 setlinecap 0 setlinejoin newpath 1 fm_g 0 0 10 0 360 arc fm_f 0fm_g 0 0 10 0 360 arc fm_t 36{1 0 moveto 0 0 10 -2.5 2.5 arc fm_f 10 rotate}repeat FmR}FmBD/FmSL{FmG fmAn translate .25 fmLn setlinewidth 0 setlinecap 0setlinejoin newpath 1 fm_g 0 0 10 0 360 arc fm_f 0 fm_g 10 .5 fmLn neg .1{0 0 3-1 roll 0 360 arc fm_t}for FmR}FmBD/FrameEr where{pop}{userdict/FrameEr(\000)put}ifelse/fMSJ 100 string def/fmXC{userdict/fMSi 2 index put end{countdictstack userdict begin/showpage{}def/FmDictStackDepth exch def count/FmStackDepth exch def}if userdict/fMSuccessfull false put currentfile cvxstopped pop fMSuccessfull not{/$brkpage where{stop}if systemdict/clear get execuserdict/FrameEr get 0 1 put FrameMacDict begin FmG systemdict/initmatrix getexec 0 systemdict/setgray get exec clippath{pathbbox}stopped{100 100 512 692}ifexch pop add 2. div newpath moveto(Courier-BoldOblique)findfont 18 scalefontsetfont FrameEr1 fm_s( \()fm_s $error begin errorname 20 string cvs fm_s(, )fm_s/command load 128 string cvs fm_s end(\))fm_s FrameEr2 print flushFrameMacDict/fMSJ get{dup currentfile exch{readline}stopped{pop exch pop T}ifnot{exit}if(EndFrame4Picture)eq{exit}if}loop grestore end}if userdict/fMSuccessfull false put FrameMacDict/fmIR get exec}fmBi def/FmEP{save userdict/fM7 3 -1 roll put setoverprint{fMN FmSP}if[/fMef/fMet/fMeh/fMew/fMey/fMex/fMei/fMej/fMek/fMel]{fmXD}forall fMex fMey translate fMet rotate fMew fMeh scalefMef{-1 1 scale}if 1 fMej fMel sub div 1 fMek fMei sub div scale fMej fMel add2 div neg fMei fMek add 2 div neg translate newpath fMel fMek moveto fMel fMeilineto fMej fMei lineto fMej fMek lineto closepath clip newpath T fmXC}FmBD/FmPI{newpath 0 0 moveto F fmXC}FmBD/FmPc{save userdict/fM7 3 -1 roll putnewpath 3 index neg 3 index neg translate 1 -1 scale 0.0 0.0 moveto T fmXC}FmBD/fmIR{fMSi{fM7 type/savetype eq{end/FmDictStackDepth where{pop countdictstackFmDictStackDepth sub dup 0 gt{{end}repeat}{pop}ifelse count FmStackDepth subdup 0 gt{{pop}repeat}{pop}ifelse}if fM7 restore}if}if FrameMacDict begin}FmBDuserdict/EndFrame4Picture{userdict/fMSi 3 -1 roll put userdict/fMSuccessfulltrue put stop}fmBi put/alphaimage where{pop}{/alphaimage{1 ne{limitcheck}if not{limitcheck}if pop image}fmPU}ifelse/fmDE{systemdict/initgraphics get execclippath{pathbbox}stopped{100 100 512 692}if exch pop add 2. div newpath moveto(Courier-BoldOblique)findfont 18 scalefont setfont currentpoint 2 copy FrameEr3fm_s 20 sub 2 copy moveto FrameEr4 fm_s 20 sub 2 copy moveto(\()fm_s statusdict/jobname get fm_s(\))fm_s 20 sub moveto FrameEr5 fm_s showpage}FmBD/cd where{dup/cd get/FmRealcd fmXD/cd{FrameMacDict begin FrameEr 0 get 0 ne{fmDE}if/FmRealcd load end exec}fmBi put}{/endp where{dup/endp get/fMRE fmXD/endp{FrameMacDict/fMRE get exec FrameEr 0 get 0 ne{FrameMacDict begin currentfilefMSJ{readline}stopped{pop exch pop true}if pop(%%Trailer)eq{fmDE}if end}if}fmBiput}if}ifelse systemdict/setpacking known{fMSP setpacking}if end%%EndProcSet%%FRMSetupFrameMacDict begin
/FrameEr1(PostScript error)def
/FrameEr2(A PostScript error occurred. FrameMaker is attempting recovery.)def
/FrameEr3(FrameMaker has detected one or more)def
/FrameEr4(PostScript errors in this document.)def
/FrameEr5(Please check your output.)def
end
%%FRMEndSetup%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(; page: 1 of 2)setjob
%%EndPageSetup
gS 0 0 584 766 rC
1 G
-14 -14 612 792 rF
0 G
0 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
0 0 :M
f0_13 sf
( )S
3 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 138.667 M (Education)S
end
4 0 :M
f0_9 sf
( )S
5 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 152 M (Massac)S
-0.088 N (husetts Institute of )S
-0.899 N (T)S
-0.538 N (ec)S
-0.088 N (hnology - Media Laborator)S
0.088 N (y)S
-0.719 N (,)S
-0.358 N ( 9/89-6/94)S
end
6 0 :M
f1_9 sf
( )S
8 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 163 M -0.033(Ph.D. in )W
-0.494 N -0.033(Arts and Media )W
-0.16 N (T)S
-0.628 N -0.033(echnology: advisor Professor David Zeltzer)W
-0.494 N -0.033(. Committee: Dr)W
-0.494 N -0.033(. )W
-0.494 N -0.033(Alex Pentland, )W
22 174 M (Dr)S
-0.494 N (. Pattie Maes, and Glorianna Davenport. )S
-0.16 N (Thesis title: Intelligent Camera Control for Graphical )S
22 185 M (Environments.  Research topics: virtual environments, graphical simulations, human-computer )S
22 196 M (interaction, telerobotics, and parallel computer graphics algorithms.)S
end
8 0 :M
f0_9 sf
( )S
9 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 218 M (Massac)S
-0.088 N (husetts Institute of )S
-0.899 N (T)S
-0.538 N (ec)S
-0.088 N (hnology - Ar)S
0.178 N (ti\336)S
(cial Intellig)S
0.088 N (ence Laborator)S
0.088 N (y)S
-0.719 N (,)S
-0.358 N ( 9/86-6/89)S
end
11 0 :M
f1_9 sf
( )S
13 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 229 M (M.S. in Brain and Cognitive Sciences.  Research topics: machine learning, robot juggling, the Utah-)S
22 240 M (MIT)S
-0.16 N ( dexterous four)S
-0.178 N (-\336)S
(ngered robotic hand, tactile sensing systems, human hand capabilities, and real )S
22 251 M (time vision systems.GP)S
-0.826 N (A: 5.0/5.0. )S
end
13 0 :M
f0_9 sf
( )S
14 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 273 M (Br)S
-0.178 N (o)S
-0.134 N (wn Univer)S
-0.134 N (sity)S
-0.719 N (,)S
-0.358 N ( 9/81-6/84)S
end
16 0 :M
f1_9 sf
( )S
18 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 284 M (Graduated Magna Cum Laude with Honors, Sc.B. in Department of Neural Sciences. )S
end
18 0 :M
f0_13 sf
( )S
21 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 308.667 M (Emplo)S
-0.257 N (yment)S
end
21 0 :M
f0_9 sf
( )S
22 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 322 M (Interzone Inc.,)S
-0.358 N ( present)S
end
24 0 :M
f1_9 sf
( )S
26 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 333 M (Designing and implementing wine purchase system over the )S
-0.16 N (W)S
-0.719 N (orld )S
-0.16 N (W)S
-0.358 N (ide )S
-0.16 N (W)S
-0.719 N (eb.)S
end
26 0 :M
f0_9 sf
( )S
27 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 355 M (Medical Media Systems,)S
-0.358 N ( Summer 6/93,)S
-0.358 N ( present)S
end
29 0 :M
f1_9 sf
( )S
31 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 366 M -0.142(Consultant. User Interface design and graphics systems programming for Medical Computer Graphics )W
22 377 M (company)S
-0.584 N (.)S
end
31 0 :M
f0_9 sf
( )S
32 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 399 M (MIT Media Laborator)S
0.088 N (y)S
-0.719 N (,)S
-0.358 N ( 9/89 to 6/94)S
end
33 0 :M
f1_9 sf
( )S
35 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 410 M (T)S
-0.628 N (eaching )S
-0.494 N (Assistant and Research )S
-0.494 N (Assistant in Computer Graphics and )S
-0.494 N (Animation.)S
end
36 0 :M
f0_9 sf
( )S
37 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 432 M (NHK Japan Br)S
-0.178 N (oadcasting,)S
-0.358 N ( )S
-0.899 N (T)S
-0.719 N (oky)S
-0.224 N (o,)S
-0.358 N ( 1/93)S
end
38 0 :M
f1_9 sf
( )S
40 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 443 M (Consultant. Installed and taught an experimental 3D graphics system and interfaced with 3D input  )S
22 454 M (devices in )S
-0.16 N (T)S
-0.628 N (okyo.)S
end
40 0 :M
f0_9 sf
( )S
41 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 476 M (Thinking Mac)S
-0.088 N (hines Corporation,)S
-0.358 N ( Summer 6/91,)S
-0.358 N ( 6/92)S
end
43 0 :M
f1_9 sf
( )S
45 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 487 M (Summer Employment. Developed algorithms for massively parallel linedrawing, raytracing, and )S
22 498 M (radiosity)S
-0.584 N (. )S
-0.16 N (T)S
-0.628 N (est suites for parallel graphics library)S
-0.584 N (.)S
end
45 0 :M
f0_9 sf
( )S
46 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 520 M (MIT Ar)S
0.178 N (ti\336)S
(cial Intellig)S
0.088 N (ence Laborator)S
0.088 N (y)S
-0.719 N (,)S
-0.358 N ( 9/86 to 6/89)S
end
48 0 :M
f1_9 sf
( )S
50 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 531 M (Research )S
-0.494 N (Assistant.  Developed learning algorithms for controlling a juggling robot.)S
end
50 0 :M
f0_9 sf
( )S
51 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 553 M (Institute f)S
-0.178 N (or Inf)S
-0.178 N (ormation and Sc)S
-0.088 N (holar)S
-0.134 N (ship - Br)S
-0.178 N (o)S
-0.134 N (wn Univer)S
-0.134 N (sity)S
-0.719 N (,)S
-0.358 N ( 9/84 to 8/86)S
end
52 0 :M
f1_9 sf
( )S
54 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 564 M (Full salaried position. Developed prototype Hypertext system and implemented framework layer of )S
22 575 M (Intermedia, a hypermedia system.  Development platforms included UNIX 4.2 BSD on Sun )S
22 586 M (W)S
-0.719 N (orkstations, IBM PC/R)S
-0.538 N (T)S
-0.628 N (s and )S
-0.494 N (Apple Macintoshes. )S
end
55 0 :M
f0_9 sf
( )S
56 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 608 M (Br)S
-0.178 N (o)S
-0.134 N (wn Univer)S
-0.134 N (sity - Neural Science Depar)S
0.178 N (tment,)S
-0.358 N ( 9/82 to 6/84)S
end
57 0 :M
f1_9 sf
( )S
59 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 619 M (Research )S
-0.494 N (Assistant in Neural Science Lab. Led to eventual honors work in plasticity in cat visual )S
22 630 M (system and motion gated visual environments. )S
end
59 0 :M
f0_9 sf
( )S
60 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 652 M (Br)S
-0.178 N (o)S
-0.134 N (wn Univer)S
-0.134 N (sity - Gould Laborator)S
0.088 N (y)S
-0.719 N (,)S
-0.358 N ( 9/82 to 6/84 )S
end
62 0 :M
f1_9 sf
( )S
64 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 663 M (T)S
-0.628 N (echnical Support Staf)S
-0.16 N (f: leader \(on call nightly\) of group of students assigned to diagnose and correct )S
22 674 M (problems related to the experimental classroom of networked )S
-0.494 N (Apollo )S
-0.16 N (W)S
-0.719 N (orkstations.)S
22 685 M ( )S
end
64 0 :M
f0_9 sf
( )S
65 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 696 M (Br)S
-0.178 N (o)S
-0.134 N (wn Univer)S
-0.134 N (sity - Computer Science Depar)S
0.178 N (tment,)S
-0.358 N ( 6/82 to 9/82)S
end
67 0 :M
f1_9 sf
( )S
69 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 707 M (Research )S
-0.494 N (Assistant: implemented three-dimensional model of the human brain, later used in )S
22 718 M (introductory neuroscience class. )S
end
69 0 :M
f2_9 sf
( )S
70 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 751 M (Refer)S
-0.332 N (ences available upon r)S
-0.332 N (equest)S
end
71 0 :M
f0_13 sf
( )S
74 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
417.6 137.667 M (T)S
-0.778 N (ec)S
-0.127 N (hnical Kno)S
-0.194 N (wledg)S
0.127 N (e)S
end
75 0 :M
f0_8 sf
( )S
76 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
417.6 150.333 M (Langua)S
-0.078 N (g)S
0.078 N (es & Operating Systems:)S
end
77 0 :M
f1_8 sf
( )S
79 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
432 163.333 M (Unix \(4.3BSD & Sys )S
-0.143 N (V\), X1)S
-0.295 N (1, )S
432 172.333 M -0.441(Macintosh, Symbolics Lisp Machine, )W
432 181.333 M (C, C++, Lisp, )S
-0.143 N (TCL/TK,  Perl, )S
432 190.333 M (NextStep)S
end
79 0 :M
f0_8 sf
( )S
80 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
417.6 204.333 M (Modelling/Animation Systems:)S
-0.318 N ( )S
end
81 0 :M
f1_8 sf
( )S
83 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
432 217.333 M (V)S
-0.887 N (ertigo, )S
-0.439 N (Alias)S
end
83 0 :M
f0_8 sf
( )S
84 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
417.6 231.333 M (Har)S
-0.158 N (d)S
-0.119 N (ware:)S
end
85 0 :M
f1_8 sf
( )S
87 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
432 244.333 M (SGI Irix 4&5, Sun 3 & 4, HP)S
-0.295 N ( Series )S
432 253.333 M (9000, DEC )S
-0.143 N (V)S
-1.031 N (AX, IBM PC/R)S
-0.479 N (T)S
-0.592 N (, )S
432 262.333 M (Macintosh,  Stardent )S
-0.143 N (T)S
-0.279 N (itan, CM-2., )S
432 271.333 M (NeXT)S
-0.143 N ( Machine)S
end
87 0 :M
f0_13 sf
( )S
90 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
417.6 299.666 M (Rele)S
-0.194 N (v)S
-0.257 N (ant A)S
-0.387 N (war)S
-0.257 N (ds)S
end
91 0 :M
f0_8 sf
( )S
92 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
417.6 312.333 M (Co-director of S.I.)S
-0.318 N ( Animation:)S
end
93 0 :M
f1_8 sf
( )S
95 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
432 325.333 M (1st Prize for )S
-0.439 N (Animation National )S
432 334.333 M (Association of College Broadcasters)S
432 348.333 M (SIGGRAPH Screening Room)S
432 362.333 M (Imagina)S
432 376.333 M (French Cable )S
-0.143 N (T)S
-0.559 N (elevision, Canal+)S
432 390.333 M (Spike & Mike\'s Festival of )S
432 399.333 M (Animation)S
end
95 0 :M
f0_8 sf
( )S
96 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
417.6 413.333 M (Contrib)S
-0.158 N (utor to Grinning Evil Death:)S
end
97 0 :M
f1_8 sf
( )S
99 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
432 426.333 M (1st Prize Student/Faculty Divison )S
432 435.333 M (NCGA)S
432 449.333 M (Ars Electronica)S
432 463.333 M (MTV)S
-0.143 N ( Liquid )S
-0.143 N (T)S
-0.559 N (elevision)S
432 477.333 M (SIGGRAPH Film Show)S
432 491.332 M (Spike & Mike\'s Festival of )S
432 500.332 M (Animation)S
end
99 0 :M
f0_8 sf
( )S
100 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
417.6 514.332 M (Vir)S
0.158 N (tual Museum:)S
end
102 0 :M
f1_8 sf
( )S
104 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
432 527.332 M (Film Show GI\'94)S
end
104 0 :M
f0_8 sf
( )S
105 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
417.6 541.332 M (Ar)S
0.158 N (thur J)S
-0.158 N (.)S
-0.318 N ( P)S
-0.318 N (oitras Fello)S
-0.119 N (wship)S
417.6 554.332 M (Sur)S
-0.158 N (dna Fello)S
-0.119 N (wship)S
417.6 567.332 M (National Science Foundation:)S
-0.318 N ( Hon-)S
417.6 576.332 M (orab)S
-0.078 N (le Mention)S
417.6 589.332 M (National Merit Finalist)S
417.6 602.332 M (Mar)S
0.078 N (yland State Distinguished )S
417.6 611.332 M (Sc)S
-0.078 N (holar)S
end
106 0 :M
f0_13 sf
( )S
109 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
417.6 640.665 M (In)S
-0.517 N (vited Presentations)S
end
110 0 :M
f1_8 sf
( )S
112 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
432 653.332 M (Kunsthochshule f\237r )S
432 662.332 M (Medien\(Cologne, Germany\))S
432 676.332 M (GMD \(Bonn, Germany\))S
432 690.332 M (NACB \(Providence, RI\))S
432 704.332 M (NHK \(Japan\))S
432 718.332 M (Dartmouth University \(NH\))S
432 732.332 M (MERL)S
-0.295 N ( \(Cambridge, MA.\))S
7 FmP
22 42 389 69 FmqF
end
112 0 :M
f0_24 sf
( )S
118 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 80 M (Ste)S
-0.357 N (ven M.)S
-0.955 N ( Druc)S
-0.475 N (ker)S
7 FmP
419 41 143 70 FmqF
end
118 0 :M
f3_9 sf
( )S
119 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
419 47 M (1783 Mass )S
-0.494 N (A)S
-0.899 N (v)S
-0.088 N (e #6)S
419 58 M (Cambridge, MA. 02140)S
419 69 M (Phone: 617.354.5645)S
419 80 M (F)S
-0.224 N (ax:     617.865.1604)S
419 91 M (smd@media.mit.edu)S
419 102 M (http://smd.www)S
-0.628 N (.media.mit.edu/)S
22 118 FmB
541 0 FmL
2 2 FmSo
end
120 0 :M
f1_10 sf
( )S
122 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
-14 -14 M ( )S
189 776 M (This document was created with FrameMaker 4.0.4) FmPT
[/CropBox[-14 778 FmDC 598 -14 FmDC]/PAGE FmPD
end
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(; page: 2 of 2)setjob
%%EndPageSetup
gS 0 0 584 766 rC
1 G
-14 -14 612 792 rF
0 G
123 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
123 0 :M
f0_13 sf
( )S
126 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 133.667 M (Pub)S
-0.127 N (lication List)S
end
127 0 :M
f1_10 sf
( )S
129 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
76 162.667 M (Drucker)S
-0.398 N (, S.M. and D. Zeltzer)S
-0.398 N (, CamDroid: )S
-0.549 N (A)S
-0.549 N ( System for Intelligent Camera Control , to appear in )S
112 174.667 M (SIGGRAPH Special Symposium on 3D Interaction. Monterey)S
-0.649 N (, CA. 1995)S
76 206.667 M (Drucker)S
-0.398 N -0.37(, S.M. Intelligent Camera Control for Graphical Environments, Ph.D. )W
-0.178 N -0.37(Thesis, Massachusetts Institute )W
112 218.667 M (of )S
-0.178 N (T)S
-0.698 N (echnology)S
-0.649 N (, 1994.)S
76 250.667 M (Drucker)S
-0.398 N (, S.M.,and D. Zeltzer)S
-0.549 N (.  Intelligent Camera Control in a )S
-0.178 N (V)S
-0.598 N (irtual Environment.  Proceedings of GI \'94. )S
112 262.667 M (Banf)S
-0.178 N (f, )S
-0.549 N (Alberta, CA. )S
-0.549 N (April, 1994.)S
76 294.666 M (Drucker)S
-0.398 N (, S.M., )S
-0.178 N (T)S
-0.74 N (.A. Galyean, and D. Zeltzer)S
-0.549 N (.  Cinema: )S
-0.549 N (A)S
-0.549 N ( System for Procedural Camera Movements.  )S
112 306.666 M (SIGGRAPH Special Symposium on 3D Interaction. Cambridge, MA. 1992.)S
76 338.666 M (Drucker)S
-0.398 N (, S.M., and P)S
-1.108 N (. Schr\232der)S
-0.549 N (.  Fast Radiosity: )S
-0.549 N (A)S
-0.549 N ( Data Parallel )S
-0.549 N (Approach.  3rd )S
-0.178 N (W)S
-0.798 N (orkshop on Photorealistic )S
112 350.666 M (Rendering. Bristol, U.K. 1992.)S
76 382.666 M (Schr\232der)S
-0.398 N (, P)S
-1.108 N (., and S.M. Drucker)S
-0.549 N (.  Data Parallel Raytracing.  Graphics Interface \'92. )S
-0.178 N (V)S
-1.108 N (ancouver)S
-0.398 N (, B.C.1992.)S
76 414.666 M (Zeltzer)S
-0.398 N -0.19(, D., and S.M. Drucker)W
-0.549 N -0.19(.  )W
-0.549 N (A)S
-0.549 N -0.19( )W
-0.178 N (V)S
-0.598 N -0.19(irtual Environment System for Mission Planning.  Proc. 1992 IMAGE )W
-0.178 N -0.19(VI )W
112 426.666 M (Conference.  Phoenix )S
-0.549 N (AZ: 1992.  125-134.)S
76 458.666 M (Drucker)S
-0.398 N (, S.M.  \322T)S
-0.698 N (ask Level Learning on a Complex )S
-0.178 N (T)S
-0.698 N (ask.\323   M.S.  M.I.T)S
-0.74 N (., 1989.)S
76 490.666 M (Aboaf, E., S.M. Drucker)S
-0.398 N (, and C.G. )S
-0.549 N (Atkeson.  )S
-0.178 N (T)S
-0.698 N (ask Level Learning on a Juggling )S
-0.178 N (T)S
-0.698 N (ask.  I.E.E.E. Robotics )S
112 502.666 M (Conference.  Scottsdale, )S
-0.549 N (AZ. 1989.  )S
76 534.666 M (Drucker)S
-0.398 N (, S.M.  \322T)S
-0.698 N (exture from )S
-0.178 N (T)S
-0.698 N (ouch.\323  Natural Computation.  Ed. )S
-0.178 N (Whitman Richards.  Cambridge: MIT)S
-0.178 N ( )S
112 546.666 M (Press, 1988.  )S
76 578.666 M (Y)S
-0.999 N (ankelovich, N., B.J. Haan, N.K. Meyrowitz and S.M. Drucker)S
-0.549 N (.  INTERMEDIA: )S
-0.178 N (The Concept and )S
112 590.666 M (Construction of a Seamless Environment. I.E.E.E. Computer)S
-0.549 N (. January)S
-0.649 N (. 1988.)S
76 622.666 M (Drucker)S
-0.398 N (, S.M., and J.M. Hollerbach.  Quanti\336)S
(cation of Precision Grasp Capabilities in Humans.  Society of )S
112 634.666 M (Neurosciences )S
-0.549 N (Abstracts.  New Orleans, LA. 1987.  )S
76 666.666 M (Siegel, D.M., S.M. Drucker)S
-0.398 N (, and I. Garabieta.  Performance )S
-0.549 N (Analysis of a )S
-0.178 N (T)S
-0.698 N (actile Sensor)S
-0.549 N (.  I.E.E.E Robotics )S
112 678.666 M (Conference. 1987.  )S
7 FmP
22 42 389 69 FmqF
end
129 0 :M
f0_24 sf
( )S
135 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
22 82 M (Ste)S
-0.357 N (ven M.)S
-0.955 N ( Druc)S
-0.475 N (ker)S
7 FmP
419 41 143 70 FmqF
end
136 0 :M
f3_9 sf
( )S
137 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
419 47 M (1783 Mass )S
-0.494 N (A)S
-0.899 N (v)S
-0.088 N (e #6)S
419 58 M (Cambridge, MA. 02140)S
419 69 M (Phone: 617.354.5645)S
419 80 M (F)S
-0.224 N (ax:     617.865.1604)S
419 91 M (smd@media.mit.edu)S
419 102 M (http://smd.www)S
-0.628 N (.media.mit.edu/)S
22 118 FmB
541 0 FmL
2 2 FmSo
[/CropBox[-14 778 FmDC 598 -14 FmDC]/PAGE FmPD
end
endp
%%Trailer
end		% md
%%EOF
